copd.factor = 0, trans = 1:4, KEEP.OUT.ATTRS = FALSE)
newd$gender.factor <- factor(newd$gender.factor, levels = c(1, 2), labels = levels(demo$gender.factor))
newd$history_of_malignancy.factor <- factor(newd$history_of_malignancy.factor, levels = c(0, 1), labels = levels(demo$history_of_malignancy.factor))
newd$history_of_ischemic_heart.factor <- factor(newd$history_of_ischemic_heart.factor, levels = c(0, 1), labels = levels(demo$history_of_ischemic_heart.factor))
newd$history_of_peripheral_vasc.factor <- factor(newd$history_of_peripheral_vasc.factor, levels = c(0, 1), labels = levels(demo$history_of_peripheral_vasc.factor))
newd$left_ventricular_dysfuncti.factor <- factor(newd$left_ventricular_dysfuncti.factor, levels = c(0, 1), labels = levels(demo$left_ventricular_dysfuncti.factor))
newd$diabetes_mellitus.factor <- factor(newd$diabetes_mellitus.factor, levels = c(0, 1), labels = levels(demo$diabetes_mellitus.factor))
newd$htn.factor <- factor(newd$htn.factor, levels = c(0, 1), labels = levels(demo$htn.factor))
newd$systemic_collagen_vascular.factor <- factor(newd$systemic_collagen_vascular.factor, levels = c(0, 1), labels = levels(demo$systemic_collagen_vascular.factor))
newd$copd.factor <- factor(newd$copd.factor, levels = c(0, 1), labels = levels(demo$copd.factor))
attr(newd, "trans") <- tmat
class(newd) <- c("msdata", "data.frame")
newd <- expand.covs(newd, covs, longnames = FALSE)
newd$strata = 1:4
msf <- msfit(competing2, newdata = newd, trans = tmat)
pt <- probtrans(msf, predt = 0)
plot(pt)
# Note: as of 9/28/21, all 8 deaths have dm='Yes' and htn='Yes'
# Setting both to 'No' in `newd` makes probability of death very small
# Out of 54 IDs used in models, 50 (93%) have hypertension
newd <- expand.grid(pd_patient_age = mean(demo$pd_patient_age),
gender.factor = 1,
albumin = mean(demo$albumin, na.rm = T),
history_of_malignancy.factor = 0,
history_of_ischemic_heart.factor = 0,
history_of_peripheral_vasc.factor = 0,
left_ventricular_dysfuncti.factor = 0,
diabetes_mellitus.factor = 0, htn.factor = 0,
systemic_collagen_vascular.factor = 0,
copd.factor = 0, trans = 1:4, KEEP.OUT.ATTRS = FALSE)
newd$gender.factor <- factor(newd$gender.factor, levels = c(1, 2), labels = levels(demo$gender.factor))
newd$history_of_malignancy.factor <- factor(newd$history_of_malignancy.factor, levels = c(0, 1), labels = levels(demo$history_of_malignancy.factor))
newd$history_of_ischemic_heart.factor <- factor(newd$history_of_ischemic_heart.factor, levels = c(0, 1), labels = levels(demo$history_of_ischemic_heart.factor))
newd$history_of_peripheral_vasc.factor <- factor(newd$history_of_peripheral_vasc.factor, levels = c(0, 1), labels = levels(demo$history_of_peripheral_vasc.factor))
newd$left_ventricular_dysfuncti.factor <- factor(newd$left_ventricular_dysfuncti.factor, levels = c(0, 1), labels = levels(demo$left_ventricular_dysfuncti.factor))
newd$diabetes_mellitus.factor <- factor(newd$diabetes_mellitus.factor, levels = c(0, 1), labels = levels(demo$diabetes_mellitus.factor))
newd$htn.factor <- factor(newd$htn.factor, levels = c(0, 1), labels = levels(demo$htn.factor))
newd$systemic_collagen_vascular.factor <- factor(newd$systemic_collagen_vascular.factor, levels = c(0, 1), labels = levels(demo$systemic_collagen_vascular.factor))
newd$copd.factor <- factor(newd$copd.factor, levels = c(0, 1), labels = levels(demo$copd.factor))
attr(newd, "trans") <- tmat
class(newd) <- c("msdata", "data.frame")
newd <- expand.covs(newd, covs, longnames = FALSE)
newd$strata = 1:4
msf <- msfit(competing2, newdata = newd, trans = tmat)
pt <- probtrans(msf, predt = 0)
dead <- filter(demo, death == 1)
table(dead$gender.factor)
table(dead$history_of_malignancy.factor)
table(dead$history_of_ischemic_heart.factor)
table(dead$history_of_peripheral_vasc.factor)
table(dead$left_ventricular_dysfuncti.factor)
table(dead$diabetes_mellitus.factor)
table(dead$htn.factor)
table(dead$systemic_collagen_vascular.factor)
table(dead$copd.factor)
temp <- summary(competing2)$coefficients %>%
data.frame() %>%
mutate(LB = exp(coef - 1.96 * se.coef.)) %>%
mutate(UB = exp(coef + 1.96 * se.coef.)) %>%
mutate(CI = sprintf(rnd, LB, UB)) %>%
select(coef, exp.coef., Pr...z.., CI, LB, UB) %>%
rename("Hazard Ratio" = exp.coef., pval = Pr...z.., "Conf. Int." = CI) %>%
rownames_to_column()
library(tibble)
temp <- summary(competing2)$coefficients %>%
data.frame() %>%
mutate(LB = exp(coef - 1.96 * se.coef.)) %>%
mutate(UB = exp(coef + 1.96 * se.coef.)) %>%
mutate(CI = sprintf(rnd, LB, UB)) %>%
select(coef, exp.coef., Pr...z.., CI, LB, UB) %>%
rename("Hazard Ratio" = exp.coef., pval = Pr...z.., "Conf. Int." = CI) %>%
rownames_to_column()
#print(competing2)
rnd <- "(%.3f, %.3f)"
temp <- summary(competing2)$coefficients %>%
data.frame() %>%
mutate(LB = exp(coef - 1.96 * se.coef.)) %>%
mutate(UB = exp(coef + 1.96 * se.coef.)) %>%
mutate(CI = sprintf(rnd, LB, UB)) %>%
select(coef, exp.coef., Pr...z.., CI, LB, UB) %>%
rename("Hazard Ratio" = exp.coef., pval = Pr...z.., "Conf. Int." = CI) %>%
rownames_to_column()
View(temp)
msdat <- msprep(time = c(NA, "time", "time", "time", "time"),
status = c(NA, "rm", "hd", "transplant", "death"),
data = filter(demo, !is.na(first_event)), trans = tmat, keep = covs)
msdat <- expand.covs(msdat, covs, append = TRUE, longnames = FALSE)
competing2 <- coxph(Surv(time, status) ~ pd_patient_age.1 + gender.factor.1 +
albumin.1 + history_of_malignancy.factor.1 + history_of_ischemic_heart.factor.1 +
history_of_peripheral_vasc.factor.1 + left_ventricular_dysfuncti.factor.1 +
diabetes_mellitus.factor.1 + htn.factor.1 + systemic_collagen_vascular.factor.1 + copd.factor.1 +
pd_patient_age.2 + gender.factor.2 +
albumin.2 + history_of_malignancy.factor.2 + history_of_ischemic_heart.factor.2 +
history_of_peripheral_vasc.factor.2 + left_ventricular_dysfuncti.factor.2 +
diabetes_mellitus.factor.2 + htn.factor.2 + systemic_collagen_vascular.factor.2 + copd.factor.2 +
pd_patient_age.3 + gender.factor.3 +
albumin.3 + history_of_malignancy.factor.3 + history_of_ischemic_heart.factor.3 +
history_of_peripheral_vasc.factor.3 + left_ventricular_dysfuncti.factor.3 +
diabetes_mellitus.factor.3 + htn.factor.3 + systemic_collagen_vascular.factor.3 + copd.factor.3 +
pd_patient_age.4 + gender.factor.4 +
albumin.4 + history_of_malignancy.factor.4 + history_of_ischemic_heart.factor.4 +
history_of_peripheral_vasc.factor.4 + left_ventricular_dysfuncti.factor.4 +
diabetes_mellitus.factor.4 + htn.factor.4 + systemic_collagen_vascular.factor.4 + copd.factor.4 +
strata(trans), data = msdat)
print(competing2)
#rnd <- "(%.3f, %.3f)"
#temp <- summary(competing2)$coefficients %>%
#  data.frame() %>%
#  mutate(LB = exp(coef - 1.96 * se.coef.)) %>%
#  mutate(UB = exp(coef + 1.96 * se.coef.)) %>%
#  mutate(CI = sprintf(rnd, LB, UB)) %>%
#  select(coef, exp.coef., Pr...z.., CI, LB, UB) %>%
#  rename("Hazard Ratio" = exp.coef., pval = Pr...z.., "Conf. Int." = CI) %>%
#  rownames_to_column()
suppressPackageStartupMessages(require(dplyr))
suppressPackageStartupMessages(require(tgsify))
suppressPackageStartupMessages(require(Hmisc))
suppressPackageStartupMessages(require(knitr))
suppressPackageStartupMessages(require(kableExtra))
suppressPackageStartupMessages(require(tangram.pipe))
data <- readRDS("../data/master.rds")
demo <- data %>%
filter(is.na(redcap_repeat_instance)) %>%
filter(is.na(outside_unit) | outside_unit == 0) %>%
mutate(insertion_type = case_when(
insertion_method___1==1 ~ "Percutaneous"
, insertion_method___2==1 ~ "Surgical Laparoscopy"
, insertion_method___3==1 ~ "Open Dissection"
, insertion_method___4==1 ~ "Percutaneous with Fluoro"
)) %>%
mutate(exchange = case_when(
initial_exchange___1==1 ~ "Initial Catheter Insertion"
, initial_exchange___2==1 ~ "Catheter Replaced (same site)"
, initial_exchange___3==1 ~ "Catheter Replaced (new site)"
)) %>%
rename(adhesions = op_report___1, hernia = op_report___2) %>%
mutate(rrt_any = ifelse(renal_transplant_prior_to == 1 | pd_prior_to_this_time == 1 | inpt_hd == 1 |
hd_incenter_prior_to_pd == 1 | hd_home_prior_to_pd == 1, 1, 0)) %>%
mutate(rrt_any = ifelse(is.na(rrt_any), 0, rrt_any)) %>%
mutate(albumin = ifelse(is.na(albumin), albumin_bcg - 0.5, albumin)) %>%
mutate(renal_transplant_prior_to=ifelse(is.na(renal_transplant_prior_to.factor), 0, renal_transplant_prior_to)) %>%
mutate(pd_prior_to_this_time = ifelse(is.na(pd_prior_to_this_time), 0, pd_prior_to_this_time)) %>%
mutate(inpt_hd = ifelse(is.na(inpt_hd), 0, inpt_hd)) %>%
mutate(hd_incenter_prior_to_pd = ifelse(is.na(hd_incenter_prior_to_pd), 0, hd_incenter_prior_to_pd)) %>%
mutate(hd_home_prior_to_pd = ifelse(is.na(hd_home_prior_to_pd), 0, hd_home_prior_to_pd)) %>%
mutate(cirrhosis = ifelse(is.na(cirrhosis), 0, cirrhosis))
comp <- data %>%
filter(record_id %in% demo$record_id) %>%
filter(redcap_repeat_instrument == "practical_pd_crf_3_pd_catheter_complications")
#filter(!is.na(redcap_repeat_instance))
demo$insertion_type <- factor(demo$insertion_type, levels = c("Percutaneous", "Surgical Laparoscopy", "Open Dissection", "Percutaneous with Fluoro"))
demo$exchange <- factor(demo$exchange, levels = c("Initial Catheter Insertion", "Catheter Replaced (same site)", "Catheter Replaced (new site)"))
demo$adhesions <- factor(demo$adhesions, levels = c(1, 0), labels = c("Yes", "No"))
demo$hernia <- factor(demo$hernia, levels = c(1, 0), labels = c("Yes", "No"))
demo$rrt_any <- factor(demo$rrt_any, levels = c(1, 0), labels = c("Yes", "No"))
demo$renal_transplant_prior_to <- factor(demo$renal_transplant_prior_to, levels = c(1, 0), labels = c("Yes", "No"))
demo$pd_prior_to_this_time <- factor(demo$pd_prior_to_this_time, levels = c(1, 0), labels = c("Yes", "No"))
demo$inpt_hd <- factor(demo$inpt_hd, levels = c(1, 0), labels = c("Yes", "No"))
demo$hd_incenter_prior_to_pd <- factor(demo$hd_incenter_prior_to_pd, levels = c(1, 0), labels = c("Yes", "No"))
demo$hd_home_prior_to_pd <- factor(demo$hd_home_prior_to_pd, levels = c(1, 0), labels = c("Yes", "No"))
demo$cirrhosis <- factor(demo$cirrhosis, levels = c(1, 0), labels = c("Yes", "No"))
levels(demo$adv_lap_procedures___1.factor) <- c("No", "Yes")
levels(demo$adv_lap_procedures___2.factor) <- c("No", "Yes")
levels(demo$adv_lap_procedures___3.factor) <- c("No", "Yes")
levels(demo$adv_lap_procedures___4.factor) <- c("No", "Yes")
levels(demo$adv_lap_procedures___5.factor) <- c("No", "Yes")
demo$adv_lap_procedures___1.factor <- relevel(demo$adv_lap_procedures___1.factor, "Yes")
demo$adv_lap_procedures___2.factor <- relevel(demo$adv_lap_procedures___2.factor, "Yes")
demo$adv_lap_procedures___3.factor <- relevel(demo$adv_lap_procedures___3.factor, "Yes")
demo$adv_lap_procedures___4.factor <- relevel(demo$adv_lap_procedures___4.factor, "Yes")
demo$adv_lap_procedures___5.factor <- relevel(demo$adv_lap_procedures___5.factor, "Yes")
label(demo$renal_transplant_prior_to) <- "Renal transplant prior to PD"
label(demo$pd_prior_to_this_time) <- "Previous PD prior to current PD"
label(demo$inpt_hd) <- "HD/CRRT as inpatient prior to PD"
label(demo$hd_incenter_prior_to_pd) <- "HD - incenter outpatient - prior to PD"
label(demo$hd_home_prior_to_pd) <- "HD - at home - prior to PD"
#label(demo$type_pd_start.factor) <- "Type of PD start"
label(demo$urgent_or_traditional.factor) <- "Type of PD start"
label(demo$history_of_malignancy.factor) <- "History of malignancy"
label(demo$history_of_ischemic_heart.factor) <- "History of ischemic heart disease"
label(demo$history_of_peripheral_vasc.factor) <- "History of peripheral vascular disease"
label(demo$left_ventricular_dysfuncti.factor) <- "Left ventricular dysfunction"
label(demo$diabetes_mellitus.factor) <- "Diabetes mellitus"
label(demo$systemic_collagen_vascular.factor) <- "Systemic collagen vascular disease"
label(demo$copd.factor) <- "COPD"
label(demo$cirrhosis) <- "Cirrhosis"
label(demo$insertion_type) <- "Type of Catheter Placement"
label(demo$exchange) <- "Initial or Replacement Catheter"
label(demo$adv_lap_procedures___1.factor) <- "Lysis of adhesions"
label(demo$adv_lap_procedures___2.factor) <- "Omentectomy"
label(demo$adv_lap_procedures___3.factor) <- "Omentopexy"
label(demo$adv_lap_procedures___4.factor) <- "Hernia repair"
label(demo$adv_lap_procedures___5.factor) <- "Other"
label(demo$gender.factor) <- "Gender"
label(demo$rrt_any) <- "Any Renal Replacement Therapy"
label(demo$htn.factor) <- "Hypertension"
label(demo$insertion_site.factor) <- "Exit site"
label(demo$albumin) <- "Albumin"
label(demo$did_training_start.factor) <- "Did patient start PD Training"
tbl0 <- tbl_start(demo, NULL, missing = TRUE) %>%
num_row("pd_patient_age") %>%
cat_row("gender.factor", summary = cat_pct, digits = 0) %>%
num_row("albumin") %>%
tbl_out()
tbl0[[13]] %>%
tangram_styling() %>%
kable(escape=F) %>%
trimws %>%
kable_styling(c("striped","bordered"))
tbl1_formula <- (
renal_transplant_prior_to
+ pd_prior_to_this_time
+ inpt_hd
+ hd_incenter_prior_to_pd
+ hd_home_prior_to_pd
+ rrt_any
+ urgent_or_traditional.factor
~ 1
)
tbl1 <- summaryM(
tbl1_formula
, data = demo
, continuous = 4
, overall = F
, na.include = T
, na.action = na.retain
, test = F
)
tbl1 <- summaryM_to_df(
tbl1
, long = T
, exclude1 = F
, what = "%"
, digits = 4
, pctdig = 1
, vnames="labels"
, prmsd = T
) %>% sapply(slice_to_box)
colnames(tbl1)[1] <- "Variable"
colnames(tbl1)[2] <- "Pct. (N)"
tbl1 %>% kable(escape=F) %>% trimws %>% kable_styling(c("striped","bordered"))
tbl1A <- tbl_start(demo, NULL, missing = TRUE) %>%
num_row("egfr") %>%
tbl_out()
tbl1A[[11]] %>%
tangram_styling() %>%
kable(escape = F) %>%
trimws %>%
kable_styling(c("striped", "bordered"))
tbl2_formula <- (
history_of_malignancy.factor
+ history_of_ischemic_heart.factor
+ history_of_peripheral_vasc.factor
+ left_ventricular_dysfuncti.factor
+ diabetes_mellitus.factor
+ htn.factor
+ systemic_collagen_vascular.factor
+ copd.factor
+ cirrhosis
~ 1
)
tbl2 <- summaryM(
tbl2_formula
, data = demo
, continuous = 4
, overall = F
, na.include = T
, na.action = na.retain
, test = F
)
tbl2 <- summaryM_to_df(
tbl2
, long = T
, exclude1 = F
, what = "%"
, digits = 4
, pctdig = 1
, vnames="labels"
, prmsd = T
) %>% sapply(slice_to_box)
colnames(tbl2)[1] <- "Variable"
colnames(tbl2)[2] <- "Pct. (N)"
tbl2 %>% kable(escape=F) %>% trimws %>% kable_styling(c("striped","bordered"))
tbl3_formula <- (
insertion_type
~ 1
)
tbl3 <- summaryM(
tbl3_formula
, data = demo
, continuous = 4
, overall = F
, na.include = T
, na.action = na.retain
, test = F
)
tbl3 <- summaryM_to_df(
tbl3
, long = T
, exclude1 = F
, what = "%"
, digits = 4
, pctdig = 1
, vnames="labels"
, prmsd = T
) %>% sapply(slice_to_box)
colnames(tbl3)[1] <- "Variable"
colnames(tbl3)[2] <- "Pct. (N)"
tbl3 %>% kable(escape=F) %>% trimws %>% kable_styling(c("striped","bordered"))
tbl4_formula <- (
+ insertion_site.factor
+ exchange
~ 1
)
tbl4 <- summaryM(
tbl4_formula
, data = demo
, continuous = 4
, overall = F
, na.include = T
, na.action = na.retain
, test = F
)
tbl4 <- summaryM_to_df(
tbl4
, long = T
, exclude1 = F
, what = "%"
, digits = 4
, pctdig = 1
, vnames="labels"
, prmsd = T
) %>% sapply(slice_to_box)
colnames(tbl4)[1] <- "Variable"
colnames(tbl4)[2] <- "Pct. (N)"
tbl4 %>% kable(escape=F) %>% trimws %>% kable_styling(c("striped","bordered"))
tbl5_formula <- (
adhesions
+ hernia
~ 1
)
tbl5 <- summaryM(
tbl5_formula
, data = demo
, continuous = 4
, overall = F
, na.include = T
, na.action = na.retain
, test = F
)
tbl5 <- summaryM_to_df(
tbl5
, long = T
, exclude1 = F
, what = "%"
, digits = 4
, pctdig = 1
, vnames="labels"
, prmsd = T
) %>% sapply(slice_to_box)
colnames(tbl5)[1] <- "Variable"
colnames(tbl5)[2] <- "Pct. (N)"
tbl5 %>% kable(escape=F) %>% trimws %>% kable_styling(c("striped","bordered"))
tbl6_formula <- (
adv_lap_procedures___1.factor
+ adv_lap_procedures___2.factor
+ adv_lap_procedures___3.factor
+ adv_lap_procedures___4.factor
+ adv_lap_procedures___5.factor
~ 1
)
tbl6 <- summaryM(
tbl6_formula
, data = demo
, continuous = 4
, overall = F
, na.include = T
, na.action = na.retain
, test = F
)
tbl6 <- summaryM_to_df(
tbl6
, long = T
, exclude1 = F
, what = "%"
, digits = 4
, pctdig = 1
, vnames="labels"
, prmsd = T
) %>% sapply(slice_to_box)
colnames(tbl6)[1] <- "Variable"
colnames(tbl6)[2] <- "Pct. (N)"
tbl6 %>% kable(escape=F) %>% trimws %>% kable_styling(c("striped","bordered"))
#Note: This is temporary code to include 1st 9 patients with date of insertion.
# Code shouldn't be run when this variable filled in on updated data pull
# demo$date_phase_change[1] <- demo$date_transplanted[1]
# demo$date_phase_change[2] <- demo$date_change_incenterhd[2]
# demo$date_phase_change[3] <- demo$date_transplanted[3]
# demo$date_phase_change[4] <- demo$date_still_on_pd[4]
# demo$date_phase_change[5] <- demo$date_died[5]
# demo$date_phase_change[6] <- demo$date_transplanted[6]
# demo$date_phase_change[7] <- demo$date_died[7]
# demo$date_phase_change[8] <- demo$date_still_on_pd[8]
# demo$date_phase_change[9] <- demo$date_still_on_pd[9]
demo$date_of_insertion <- as.Date(demo$date_of_insertion)
demo$date_phase_change <- as.Date(demo$date_phase_change)
demo <- demo %>%
mutate(cathtime = date_phase_change - date_of_insertion) %>%
mutate(days30 = ifelse(cathtime >= 30, 1, 0)) %>%
mutate(year1 = ifelse(cathtime >= 365, 1, 0)) %>%
mutate(year2 = ifelse(cathtime >= 730, 1, 0))
demo$days30 <- factor(demo$days30, levels = c(1, 0), labels = c("Catheter in use after 30 days", "Removed"))
demo$year1 <- factor(demo$year1, levels = c(1, 0), labels = c("Catheter in use after 1 year", "Removed"))
demo$year2 <- factor(demo$year2, levels = c(1, 0), labels = c("Catheter in use after 2 years", "Removed"))
levels(demo$removal_reason___1.factor) <- c("No", "Yes")
levels(demo$removal_reason___2.factor) <- c("No", "Yes")
levels(demo$removal_reason___3.factor) <- c("No", "Yes")
levels(demo$removal_reason___4.factor) <- c("No", "Yes")
levels(demo$removal_reason___5.factor) <- c("No", "Yes")
levels(demo$removal_reason___6.factor) <- c("No", "Yes")
levels(demo$removal_reason___7.factor) <- c("No", "Yes")
demo$removal_reason___1.factor <- relevel(demo$removal_reason___1.factor, "Yes")
demo$removal_reason___2.factor <- relevel(demo$removal_reason___2.factor, "Yes")
demo$removal_reason___3.factor <- relevel(demo$removal_reason___3.factor, "Yes")
demo$removal_reason___4.factor <- relevel(demo$removal_reason___4.factor, "Yes")
demo$removal_reason___5.factor <- relevel(demo$removal_reason___5.factor, "Yes")
demo$removal_reason___6.factor <- relevel(demo$removal_reason___6.factor, "Yes")
demo$removal_reason___7.factor <- relevel(demo$removal_reason___7.factor, "Yes")
label(demo$removal_reason___1.factor) <- "Catheter removal: Infection"
label(demo$removal_reason___2.factor) <- "Catheter removal: Catheter dysfunction"
label(demo$removal_reason___3.factor) <- "Catheter removal: Transition to HD"
label(demo$removal_reason___4.factor) <- "Catheter removal: Transition to hospice"
label(demo$removal_reason___5.factor) <- "Catheter removal: Kidney transplant"
label(demo$removal_reason___6.factor) <- "Catheter removal: Abdominal surgery"
label(demo$removal_reason___7.factor) <- "Catheter removal: Recovery of renal function"
tbl7 <- tbl_start(demo, NULL, default_cat_summary = cat_pct, default_binary_summary = binary_pct) %>%
binary_row("days30", digits = 0) %>%
binary_row("year1", digits = 0) %>%
binary_row("year2", digits = 0) %>%
num_row("cathtime", rowlabel = "Catheter Lifetime (days)", summary = num_mean_sd) %>%
cat_row("removal_reason___1.factor", digits = 0) %>%
cat_row("removal_reason___2.factor", digits = 0) %>%
cat_row("removal_reason___3.factor", digits = 0) %>%
cat_row("removal_reason___4.factor", digits = 0) %>%
cat_row("removal_reason___5.factor", digits = 0) %>%
cat_row("removal_reason___6.factor", digits = 0) %>%
cat_row("removal_reason___7.factor", digits = 0) %>%
cat_row("did_training_start.factor", digits = 0, missing = TRUE) %>%
tbl_out()
tbl7[[22]] %>%
tangram_styling() %>%
kable(escape=F) %>%
trimws %>%
kable_styling(c("striped","bordered"))
comp <- demo %>%
select(record_id, cathtime) %>%
right_join(comp, by = "record_id")
comp$cathtime <- as.numeric(comp$cathtime)
indiv <- split(comp, comp$record_id)
for (i in 1:length(indiv)){
indiv[[i]] <- indiv[[i]] %>%
mutate(peritonitis_per_year = sum(complication_eed6f6___8 == 1) / (cathtime / 365)) %>%
mutate(drain_diff_per_year = sum(complication_eed6f6___18 == 1) / (cathtime / 365)) %>%
mutate(drain_pain_per_year = sum(complication_eed6f6___11 == 1) / (cathtime / 365)) %>%
mutate(exit_infec_per_year = sum(complication_eed6f6___9 == 1) / (cathtime / 365)) %>%
mutate(cath_migration_per_year = sum(complication_eed6f6___19 == 1) / (cathtime / 365)) %>%
mutate(tunnel_infec_per_year = sum(complication_eed6f6___10 == 1) / (cathtime / 365))
}
comp <- plyr::ldply(indiv, data.frame)[,-1]
comp <- comp %>%
mutate(pd_adverse = case_when(
complication_adverse_event___1==1 ~ "Yes"
, complication_adverse_event___2==1 ~ "Possibly Yes"
, complication_adverse_event___3==1 ~ "Probably Not"
, complication_adverse_event___4==1 ~ "No"
)) %>%
mutate(total_complications = case_when(
complication_eed6f6___8 == 1 ~ "Peritonitis"
, complication_eed6f6___18 == 1 ~ "Difficulty draining"
, complication_eed6f6___11 == 1 ~ "Drain pain"
, complication_eed6f6___9 == 1 ~ "Exit site infection"
, complication_eed6f6___19 == 1 ~ "Catheter migration"
, complication_eed6f6___10 == 1 ~ "Tunnel infection"
, TRUE ~ "Other"
))
comp$total_complications <- factor(comp$total_complications, levels = c("Peritonitis", "Difficulty draining", "Drain pain", "Exit site infection", "Catheter migration", "Tunnel infection", "Other"))
tbl8 <- tbl_start(comp, NULL, default_cat_summary = cat_pct) %>%
num_row("peritonitis_per_year", rowlabel = "Peritonitis complications per year") %>%
num_row("drain_diff_per_year", rowlabel = "Difficulty draining complications per year") %>%
num_row("drain_pain_per_year", rowlabel = "Drain pain complications per year") %>%
num_row("exit_infec_per_year", rowlabel = "Exit site infections per year") %>%
num_row("cath_migration_per_year", rowlabel = "Catheter migrations per year") %>%
num_row("tunnel_infec_per_year", rowlabel = "Tunnel infections per year") %>%
cat_row("total_complications", rowlabel = "Total Complication Incidences", digits = 0) %>%
cat_row("classify_event.factor", rowlabel = "Event Classification", digits = 0) %>%
cat_row("pd_adverse", rowlabel = "Were adverse events caused by PD catheter", digits = 0) %>%
tbl_out()
tbl8[[19]] %>%
tangram_styling() %>%
kable(escape = F) %>%
trimws %>%
kable_styling(c("striped", "bordered"))
View(filter(demo, days30 == 0))
demo$days30
View(filter(demo, days30 == 'Removed'))
demo$did_training_start.factor
View(is.na(demo$did_training_start.factor))
View(filter(demo, is.na(did_training_start.factor)))
setwd("F:/tangram.pipe files/tangram.pipe/vignettes")
suppressPackageStartupMessages(require(tangram.pipe))
suppressPackageStartupMessages(require(knitr))
suppressPackageStartupMessages(require(kableExtra))
